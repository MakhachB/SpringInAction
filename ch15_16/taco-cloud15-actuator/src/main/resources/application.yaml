spring:
#  r2dbc:
#    url: r2dbc:postgresql://localhost:5432/tacocloud
#    username: postgres
#    password: postgres

#  datasource:
#    driver-class-name: org.postgresql.Driver

#  main:
#    allow-bean-definition-overriding: true

  data:
    mongodb:
      host: localhost
      port: 27017
#      username:
#      password:
      database: tacocloud


  #  sql:
#    init:
#      schema-locations: classpath:db/schema-local.sql
#      mode: always

  #  jpa:
#    hibernate:
#      ddl-auto: create-drop # hibernate will create and drop tables based on entities by itself
#    show-sql: true
#    properties:
#      hibernate:
#        default_schema: local
#    #        format_sql: true
#    database: postgresql
#    database-platform: org.hibernate.dialect.PostgreSQLDialect

#  kafka:
#    bootstrap-servers:
#      - localhost:9092
#      - localhost:9093 # maybe more than one server
#      - localhost:9094
#    producer:
#      keySerializer: org.springframework.kafka.support.serializer.JsonSerializer
#      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
#    template:
#      default-topic: tacocloud.orders.topic

#  rabbitmq:
#    host: localhost # By default
#    port: 5672      # By default
#    username: guest # By default
#    password: guest # By default
#    template:
#      exchange: tacocloud.order
#      routing-key: kitchens.central

#  jms:
#    template:
#      default-destination: tacocloud.order.queue
#  artemis:
#    broker-url: tcp://localhost:61616
#    user: artemis
#    password: simetraehcapa
#    embedded:
#      enabled: false

management:
  endpoints:
    web:
#      base-path: /management
      exposure:
        include: '*'
#        exclude: threaddump, heapdump
  info:
    env:
      enabled: true
    build:
      enabled: true
    git:
      mode: full
  endpoint:
    health:
      show-details: always
#    env:
#      post:
#        enabled: true # Don't work in this version

logging:
  #  file:
  #    path: /var/logs/ #TODO
  #    name: TacoCloud.log
  level:
    root: info
  #    org.springframework.security: debug
  logback:
    rollingpolicy:
      clean-history-on-start: on #TODO

server:
  port: 8080

#  port: 0 // spring will generate random port to avoid random conflict
#  port: 8443


taco:
  orders:
    page-size: 10
    sort: true


greeting: # Custom properties
  welcome:
    You are using ${spring.application.name:taco_local_app}.

info:
  contact:
    email: support@tacocloud.com
    phone: 822-625-6831
